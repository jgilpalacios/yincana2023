<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="es" xml:lang="es" xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>ADMINISTRACIÓN</title>
    <link rel="shortcut icon" href="../favicon.ico" type="image/x-icon" />
    <meta http-equiv="content-language" content="es" />
    <link rel="stylesheet" href="../css/miestilo.css">
    <script languaje="javascript" src="../mathjs/math.min.js"></script>
    <script languaje="javascript" src="../cifrado/aes.js">/* AES JavaScript implementation */</script>
    <script languaje="javascript" src="../cifrado/aes-ctr.js">/* AES Counter Mode implementation */</script>
    <!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>-->
    <script type="text/javascript" src="../js/md5.js"></script>
    <!--<script type="text/javascript" src="../mijs/encriptador.js"></script>-->
    <script src="../mijs/encriptador.js"></script>
    <script src="../js/jsencrypt.min.js"></script>
    <script src="../mijs/desencriptakk.js"></script>

    <script type="text/javascript" src="../mijs/generador.js"></script>
    <!--<script type="text/javascript" src="../mijs/generadorAdultos.js"></script>-->
    <script type="text/javascript" src="../mijs/validar.js"></script>
    <script type="text/javascript" src="../mijs/encriptador.js"></script>
    <script type="text/javascript" src="../js/jspdf.debug.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>
    <script type="text/javascript" src="../js/jquery.qrcode.min.js"></script>
    <script type="text/javascript" src="../mijs/centros.js"></script>


    <script type="text/javascript">

        let clavesPublicas = [<% for (let i = 0; i < yincanas.length; i++) { %>
            `<%= yincanas[i].clavePublica %>` <% if (i < yincanas.length - 1) { %>,<% } %>
            <% } %>
        ];

        let yincanas = [<% for (let i = 0; i < yincanas.length; i++) { %>
            { id:<%= yincanas[i].id %>, utilidad: `<%= yincanas[i].utilidad %>` } <% if (i < yincanas.length - 1) { %>,<% } %>
            <% } %>
        ];

        ///Variables globales:
        /**
         *  inscripciones: tiene copia de las inscripciones desencriptadas, que se han ido descargando,
         *                 las guarda encriptadas aes en localStorage de cara a agilizar posteriores accesos.
         *  aPresentar: guarda las inscripciones de la yincana que se está visualizando, en realidad enlaza las
         *              guardadas en inscripciones. se utliza para visualizar, realizar ordenaciones, busquedas
         *              de repetidos, etc...
         *  DatosProgreso: guarda un objeto con los parametros de llamada a la fucion: veCargando, que se invoca
         *                 mediante setTimeout, para que se refresque la bara de progreso (si no se hace así no funciona) 
         *  widthPbar: grado de avance de la barra de progreso
         *  totalOperaciones y operacionesPendientes: se guardan los cambios de estado o numero de equipo
         *                                            codificadas en total... y si ha habido en oper...pendientes,
         *                                            para luego lanzar un proceso que las cargue todas en bloque.
         *  clavesPrivadas: para gestionar el encriptado de los datos.
         */

        let inscripciones = [];
        if (localStorage.getItem('inscripciones')) inscripciones = JSON.parse(Aes.Ctr.decrypt(localStorage.getItem('inscripciones'), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256));
        let aPresentar = [];
        ///barra de progreso
        let DatosProgreso = {
            tanda: '', partida: 0, cuantas: 2, seModificaIns: false, nfilas: 0
        }
        ////para barra de progreso
        let widthPbar = 0;
        /// operaciones de cambo de estado  asignación de número de equipo.
        let totalOperaciones = {};
        let operacionesPendientes = false;

        ///Claves privadas, se deben cargar localmente para garantizar la privacidad
        // de las inscrpciones, se usa esta variable global, luego se hace un resumen
        // MD5 que se usa en local en key_yincanas, este se manda al servidor para
        // solo devolver datos encriptados si se demuestra que se tien la clave privada
        // al poder enviar el resumen, se gestionan en un array, cuyo indice es yincanaId-1
        let clavesPrivadas=[];
        /*
        //para probar que AES es muy rapida en comparacion
        alert('paso1:\n'+localStorage.getItem('inscripciones'))
        let pppkkk111=Aes.Ctr.encrypt(localStorage.getItem('inscripciones'), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256);
        alert('paso2:\n'+pppkkk111)
        let lllpppjkjj11=Aes.Ctr.decrypt(pppkkk111, 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256) 
        alert('paso3:\n'+lllpppjkjj11);*/

        //alert(localStorage.getItem('inscripciones'));
        function getAbsolutePath() {
            var loc = window.location;
            var pathName = loc.pathname;//.substring(0, loc.pathname.lastIndexOf('/') + 1);
            return loc.href.substring(0, loc.href.length - ((loc.pathname + loc.search + loc.hash).length - pathName.length));
        }

        function normalizaFecha(date) {
            if (date) {
                let dd = new Date(date);
                return dd.getDate() + '/' + (dd.getMonth() + 1) + '/' + dd.getFullYear() + ' ' + dd.getHours() + ':' + dd.getMinutes();
            } else return '';
        }

        ///para realizar las actualizaciones de estado, o numero de equipo
        //en Base de Datos
        const cargaOperaciones = async () => {
            alert('se lanza')
            if (operacionesPendientes) {
                const miFetch = await fetch(getAbsolutePath() + '/update', {
                    headers: {
                        'Content-type': 'application/json'
                    },
                    method: 'POST',
                    //body: JSON.stringify({ id: 11, name: 'Rodrigo Díaz de Vivar', username: 'El Cid' })
                    body: JSON.stringify(totalOperaciones)
                });
                // Transforma la respuesta. En este caso lo convierte a JSON
                const json = await miFetch.json();
                if (json.autorizado) {
                    //alert('se han hecho:\n'+JSON.stringify(json));
                    json.actualizamos.forEach(inscripcion => {
                        let actualiza = aPresentar.find(ins => ins.id === inscripcion.id);
                        //alert(JSON.stringify(actualiza));
                        //alert(JSON.stringify(inscripcion));
                        ['nequipo', 'estado', 'recibida'].forEach(item => {
                            if (actualiza[item] !== inscripcion[item]) actualiza[item] = inscripcion[item];
                        });
                    })
                    //localStorage.setItem('inscripciones', JSON.stringify(inscripciones));
                    //Aes.Ctr.encrypt(JSON.stringify(inscripciones),'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo',256)
                    localStorage.setItem('inscripciones', Aes.Ctr.encrypt(JSON.stringify(inscripciones), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256));
                    totalOperaciones = {};
                    operacionesPendientes = false;
                    //alert(JSON.stringify(aPresentar));
                    document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
                } else {
                    alert('clave incorrecta o yincana no atorizada');
                    document.getElementById('decrip').innerHTML = 'Debe volver a poner las credenciales y recargar'
                }
            } else {
                alert('nada que actualizar');
            }

        }

        ///para realizar ordenaciones en el listado.
        const OrdLocal = (criterio) => { //alert('se emtra');
            //alert (criterio);
            //alert(miArrayDeObjetos[0]['ID']);
            //miArrayDeObjetos.sort(function(a, b) {  return  a[criterio] > b[criterio] ? 1 : -1; }); //alert('se etra');
            let ordenamos = true;
            if (operacionesPendientes) {
                ordenamos = confirm('Si ordenamos se cancelaran los cambios planificados en la lista')
            }
            if (ordenamos) {
                totalOperaciones = {};
                operacionesPendientes = false;

                let indice;
                switch (criterio) {
                    case 'NEQUIPO': indice = 'nequipo'; break;
                    case 'NSOL': indice = 'nsol'; break;
                    case 'TIPO': indice = 'tipo'; break;
                    case 'CODCENTRO': indice = 'cod_centro'; break;
                    //case 'RESPONSABLE': indice=cod_centro;break;
                    case 'SOLICITADA': indice = 'solicitada'; break;
                    case 'RECIBIDA': indice = 'recibida'; break;
                    case 'ESTADO': indice = 'estado'; break;
                };
                if (criterio === 'RESPONSABLE') {
                    aPresentar.sort(function (a, b) { return a['ApP1'] + ' ' + a['ApP2'] + ', ' + a['NomP'] > b['ApP1'] + ' ' + b['ApP2'] + ', ' + b['NomP'] ? 1 : -1; }); //alert('se etra');
                } else aPresentar.sort(function (a, b) { return a[indice] > b[indice] ? 1 : -1; }); //alert('se etra');
                //alert(miArrayDeObjetos[0]['ID']);
                //Alocal();
                document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
            }
        }


        // Para registrar cada operación de cambio de estado o número de equipo,
        //luego se lanza el proceso que lleva a cabo todas en la Base de datos
        //con: cargaOperaciones
        const registraOperacion = (op) => {
            let objeto = op.split(',');//alert(objeto);
            if (objeto[2] < 0) {
                delete totalOperaciones[objeto[0] + objeto[1]];
            }
            else totalOperaciones[objeto[0] + objeto[1]] = objeto;
            operacionesPendientes = true;
            //alert(op+'registrado'+objeto+';'+JSON.stringify(totalOperaciones));
        }

        //crea el html de las inscripciones aPresentar
        const CreaTablaInscripciones = (seleccion) => {
            let cabecera = `<tr><th>ACCIÓN</th><th>ID</th><th class="ordenable" onclick="OrdLocal('NEQUIPO')">NºEQUIPO</th><th class="ordenable" onclick="OrdLocal('NSOL')">NSOL</th><th>CLAVE</th><th class="ordenable" onclick="OrdLocal('TIPO')">TIPO</th><th class="ordenable" onclick="OrdLocal('CODCENTRO')">CENTRO</th><th>ALUMNOS</th><th class="ordenable" onclick="OrdLocal('RESPONSABLE')">RESPONSABLE</th><th class="ordenable" onclick="OrdLocal('SOLICITADA')">SOLICITADA</th><th class="ordenable" onclick="OrdLocal('RECIBIDA')">RECIBIDA</th><th class="ordenable" onclick="OrdLocal('ESTADO')">ESTADO</th></tr>`;
            let cuerpo = '';
            //alert('seEntra ' + JSON.stringify(seleccion))
            seleccion.forEach(caso => {//alert(id);
                let inscripcion = inscripciones.find(ins => ins.id === caso.id);
                let accion;
                let id = caso.id;
                switch (inscripcion.estado) {
                    case 0: accion = 'GENERADA'; break;
                    case 1: accion = 'RECIBIDA'; break;
                    case 2: accion = 'ADMITIDA'; break;
                    case 3: accion = 'LESPERA'; break;
                    case 4: accion = 'ANULADA'; break;
                };//alert(id+accion);
                let cuerpoAdd = `<td class="${accion}" id="EstadE${id}"><select onchange="registraOperacion(this.value);"><option value="ESTADO,${id}, -1" selected="selected"></option><option value="ESTADO,${id}, 0">GENERADA</option><option value="ESTADO,${id},1">RECIBIDA</option><option value="ESTADO,${id},2">ADMITIDA</option><option value="ESTADO,${id}, 3">L. ESPERA</option><option value="ESTADO,${id}, 4">ANULADA</option></select></td><td>${id}</td><td><input type="text" name="pin${id}" id="pin${id}" maxlength="3" size="3" onchange=";registraOperacion('NEQUIPO,${id}, '+this.value+'')" value="${inscripcion.nequipo || ''}"></td><td>${inscripcion.nsol}</td>
            <td>${inscripcion.clave.substring(0, 8)}<br>${inscripcion.clave.substring(8, 16)}<br>${inscripcion.clave.substring(16, 24)}<br>${inscripcion.clave.substring(24)}</td><td class="${inscripcion.tipo}">${inscripcion.tipo.substring(0, 1).toUpperCase()}</td>
                    <td>${inscripcion.cod_centro}<br> ${inscripcion.tipoC + ' ' + inscripcion.nombre_centro}<br>(${inscripcion.loc_centro})</td><td onclick="muestraEditor(${id});" class="editable"><a name="filaEd${id}"><table><tbody>
                    <tr><td>${inscripcion.Ap11} ${inscripcion.Ap12}, ${inscripcion.Nombre1} ( ${inscripcion.Edad1 || ''})</td></tr>
                    <tr><td>${inscripcion.Ap21} ${inscripcion.Ap22}, ${inscripcion.Nombre2} ( ${inscripcion.Edad2 || ''})</td></tr>
                    <tr><td>${inscripcion.Ap31} ${inscripcion.Ap32}, ${inscripcion.Nombre3} ( ${inscripcion.Edad3 || ''})</td></tr>
                    <tr><td>${inscripcion.Ap41} ${inscripcion.Ap42}, ${inscripcion.Nombre4} ( ${inscripcion.Edad4 || ''})</td></tr></tbody></table></a></td>
                    <td><table><tbody><tr><td>${inscripcion.ApP1} ${inscripcion.ApP2}, ${inscripcion.NomP}</td></tr><tr><td>${inscripcion.TelP1}/ ${inscripcion.TelP2}</td></tr><tr><td>${inscripcion.EmailP}</td></tr></tbody></table></td>
                    <td>${normalizaFecha(inscripcion.solicitada)}</td><td>${normalizaFecha(inscripcion.recibida)}</td><td class="${accion}" id="EstadM${id}">${accion}<br>(<b>${inscripcion.estado}</b>)</td></tr>`;
                cuerpo += cuerpoAdd;
            })
            //f3c3108138a84ea9b1ce32c8679cfa8d
            //alert(cabecera);
            //alert(cuerpo);
            //alert('<table style="text-align: center; width: 100% ;" cellspacing="1" cellpadding="1" border="1"><tbody>'+cabecera+cuerpo+'</tbody></table>');
            return '<table style="text-align: center; width: 100% ;" cellspacing="1" cellpadding="1" border="1"><tbody>' + cabecera + cuerpo + '</tbody></table>';

        }


        ///para realizar la busqueda inicial, de las inscripciones de la yincana
        ///con las condiciones de búsqueda y luego se presentan.
        const LanzaCargaCambioEstado = async () => {//alert('vamos');
            let yincana = document.getElementById('localidad').value;
            let estado = document.getElementById('estado').value;
            let diaIn = document.getElementById('diaIn').value;
            let mesIn = document.getElementById('mesIn').value;
            let diaFin = document.getElementById('diaFin').value;
            let mesFin = document.getElementById('mesFin').value;
            let fechaIn = Atimestamp(diaIn, mesIn);
            let fechaFin = Atimestamp(diaFin, mesFin);


            //para gestionar la autenticacion:
            let key_yincanas = [];
            clavesPrivadas.forEach(yi => {
                key_yincanas.push(calcMD5(yi))
            })
            //alert(key_yincanas);
            let key_admin = calcMD5(document.getElementById('CAdmin').value);
            //alert(key_admin);

            //alert(getAbsolutePath());
            const miFetch = await fetch(getAbsolutePath() + '/get', {
                headers: {
                    'Content-type': 'application/json'
                },
                method: 'POST',
                //body: JSON.stringify({ id: 11, name: 'Rodrigo Díaz de Vivar', username: 'El Cid' })
                body: JSON.stringify({ key_yincanas, key_admin, yincana, estado, fechaIn, fechaFin })
            });
            // Transforma la respuesta. En este caso lo convierte a JSON
            const json = await miFetch.json();
            //alert(json.length);
            if (json.autorizado) {
                ///se configura el lanzamiento de la carga de las inscripciones, configurando la variable global: aPresentar, DatosProgreso
                let seModificaIns = false;
                aPresentar = [];
                let nfilas = json.inscripciones.length;
                DatosProgreso = {
                    tanda: json.inscripciones,
                    partida: 0, cuantas: 2, seModificaIns: false,
                    nfilas: nfilas
                };
                //lanzamos el proceso de actualizacion, de 2 en 2, 
                //esperando 1 ms tras completarse.
                setTimeout(veCargando, 1);


            } else {
                alert('Clave de administrador incorrecta o gymkana no disponible\n vuelva a poner las credenciales');
                //document.getElementById('decrip').innerHTML = 'Debe volver a poner las credenciales y recargar'
            }
        }


        const Atimestamp = (dia, mes) => {
            if (dia.trim() === '' || mes === '') {
                return '';
            } else {
                let anno = new Date().getFullYear();
                return new Date(anno, mes, dia).getTime();
            }
        }

        const quitaSesionAdmin = async () => {
            const miFetch = await fetch(getAbsolutePath() + '/quitaSesionUser', {
                headers: {
                    'Content-type': 'application/json'
                },
                method: 'POST',
                //body: JSON.stringify({ id: 11, name: 'Rodrigo Díaz de Vivar', username: 'El Cid' })
                body: JSON.stringify({ users: ['admin'] })
            });
            // Transforma la respuesta. En este caso lo convierte a JSON
            const json = await miFetch.json();
            alert(JSON.stringify(json));
        }
        let inscripcionEditada;
        let NUM_SOL = 0;
        let CLAVE = ''
        DatosSolicitud = [];
        //// se lanza la edición de una inscripción en concreto
        const muestraEditor = (id) => {
            let inscripcion = inscripciones.find(ins => ins.id === id);
            inscripcionEditada = inscripcion;
            NUM_SOL = inscripcion.nsol;
            CLAVE = inscripcion.clave;
            html = `<div align="center" id="inscripcionAEditar"><img src="${inscripcion.yincanaId}/cabecera.svg" ></div>
            <hr/>
TIPO DE EQUIPO<br/> 
  <input type="radio" name="tipo" id="primaria" value="primaria" onchange="cambioTipo();" ${'primaria' === inscripcion.tipo ? 'checked' : ''}> Equipo de Ed. <b>Primaria</b> de Centro (4 alumnos de Ed. Primaria del mismo Centro Educativo)<br>
  <input type="radio" name="tipo" id="secundaria" value="secundaria" onchange="cambioTipo();" ${'secundaria' === inscripcion.tipo ? 'checked' : ''}> Equipo de Ed. <b>Secundaria</b> de Centro (4 alumnos de Ed. Secundaria del mismo Centro Educativo )<br/>
  <input type="radio" name="tipo" id="adultos" value="adultos" onchange="cambioTipo();" ${'adultos' === inscripcion.tipo ? 'checked' : ''}> Equipo de Ed. para <b>Adultos</b> de Centro (4 alumnos de Ed. para Adultos del mismo Centro Educativo )<br/>
Tipo:<!--<input name="tipoC" id="tipoC" onchange="seActualiza(this);" maxlength="10" size="10" value="${inscripcion.tipoC}" >-->
<select name="tipoC" id="tipoC" value="${inscripcion.tipoC}" onchange="document.getElementById('cod_centro').value=''; Candidatos()">
            </select>
Nombre del Centro: <input name="nombre_centro" id="nombre_centro" onkeyup="document.getElementById('cod_centro').value='';this.value=this.value.toUpperCase();Candidatos()" maxlength="50" size="50" value="${inscripcion.nombre_centro}" >
CÓDIGO: <input name="cod_centro" id="cod_centro" maxlength="8" size="8" onchange="Candidatos()" value="${inscripcion.cod_centro}"><a href="https://gestiona.comunidad.madrid/wpad_pub/run/j/MostrarConsultaGeneral.icm?tipoCurso=ADM&sinboton=S" target="_BLANK" title="Buscador de Centros Comunidad de Madrdid"><img src="../img/find.png" align="middle"></a>  
Localidad: <input name="loc_centro" id="loc_centro" onkeyup="document.getElementById('cod_centro').value='';this.value=this.value.toUpperCase();Candidatos()" maxlength="30" size="30" value="${inscripcion.loc_centro}"><br>
<span id="centros"></span><hr/>
DATOS DE LOS COMPONENTES DEL EQUIPO<hr/>
 <table style="width:100%">
  <tr>
    <th><br/></th>
    <th>Apellido1</th>
    <th>Apellido2</th>
    <th>Nombre</th>
    <th>Edad</th>
  </tr>
  <tr>
    <td>1</td>
    <td><input name="Ap11" id="Ap11" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap11}"></td>
    <td><input name="Ap12" id="Ap12" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap12 || ''}"></td>
    <td><input name="Nombre1" id="Nombre1" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Nombre1}"></td>
    <td><input name="Edad1" id="Edad1" maxlength="2" size="2" onchange="seActualiza(this);" value="${+inscripcion.Edad1 || ''}"></td>
  </tr>
  <tr>
    <td>2</td>
    <td><input name="Ap21" id="Ap21" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap21}"></td>
    <td><input name="Ap22" id="Ap22" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap22 || ''}"></td>
    <td><input name="Nombre2" id="Nombre2" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Nombre2}"></td>
    <td><input name="Edad2" id="Edad2" maxlength="2" size="2" onchange="seActualiza(this);" value="${+inscripcion.Edad2 || ''}"></td>
  </tr>
  <tr>
    <td>3</td>
    <td><input name="Ap31" id="Ap31" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap31}"></td>
    <td><input name="Ap32" id="Ap32" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap32 || ''}"></td>
    <td><input name="Nombre3" id="Nombre3" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Nombre3}"></td>
    <td><input name="Edad3" id="Edad3" maxlength="2" size="2" onchange="seActualiza(this);" value="${+inscripcion.Edad3 || ''}"></td>
   </tr>
  <tr>
    <td>4</td>
    <td><input name="Ap41" id="Ap41" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap41}"></td>
    <td><input name="Ap42" id="Ap42" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Ap42 || ''}"></td>
    <td><input name="Nombre4" id="Nombre4" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.Nombre4}"></td>
    <td><input name="Edad4" id="Edad4" maxlength="2" size="2" onchange="seActualiza(this);" value="${+inscripcion.Edad4 || ''}"></td>
  </tr>
</table>
<p>PERSONA DE CONTACTO: <p/>
<p>Primer apellido: <input name="ApP1" id="ApP1" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.ApP1}">
Segundo apellido: <input name="ApP2" id="ApP2" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.ApP2 || ''}">
Nombre: <input name="NomP" id="NomP" onchange="seActualiza(this);" maxlength="20" size="20" value="${inscripcion.NomP}"></p>  
<p>Telefonos de contacto: <input name="TelP1" id="TelP1" maxlength="9" size="9" onchange="seActualiza(this);" value="${inscripcion.TelP1}"> / <input name="TelP2" id="TelP2" maxlength="9"  size="9" onchange="seActualiza(this);"  value="${inscripcion.Telp2 || ''}"> Correo e.: <input name="EmailP" id="EmailP" onchange="seActualizaCorreo(this);" maxlength="50"  size="50"  value="${inscripcion.EmailP}"></p><hr/>
<br><br>
<input name="ACTUALIZAR DATOS DE LA FICHA" value="ACTUALIZAR DATOS DE LA FICHA" type="button" onclick="LanzaLaActualizacion()">
<input name="CANCELAR" value="CANCELAR" type="button" onclick="ocultaEditor()">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input name="CreaCopiaSolicitud" value="CreaCopiaSolicitud" type="button" onclick="CreaCopiaSol();">
<hr><p><br>&nbsp;&nbsp;&nbsp;++Mueve la solicitud a la Gymkana de
<select id="yincanaC" onchange="DesplazaA(this.value);" >
    <option id ="blanco" value="#" selected></option>
    <% for (let i=0;i<yincanas.length;i++){ %>
        <option id ="<%= yincanas[i].utilidad %>" value="<%= yincanas[i].id %>" ><%= yincanas[i].utilidad %></option>
    <% } %> 
</select> 
&nbsp;Con nº de Equipo:<input type="text" name="NEQUIPOED" id="NEQUIPOED" maxlength="3" size="3" onchange="PonNEquipo(this);" value="0">
<input name="DESPLAZA" value="DESPLAZA" type="button" onclick="mueveEquipo();">
</p><br>`;

            document.getElementById('decrip').style.visibility = 'hidden';
            document.getElementById('decrip').style.display = "none"
            //document.getElementById('decrip').style.visibility.zIndex='3';
            document.getElementById('alumno').innerHTML = html;
            PonTipos();//para que salga el select con TIPOS DE CENTROS
            document.getElementById('tipoC').value = inscripcion.tipoC
            document.getElementById('alumno').style.visibility = 'visible';
            document.getElementById('alumno').style.display = "block";
            window.location.hash = '#inscripcionAEditar'; //nos posicionamos al principio

        }

        const ocultaEditor = () => {
            document.getElementById('decrip').style.visibility = 'visible';
            document.getElementById('decrip').style.display = "block";
            //document.getElementById('decrip').style.visibility.zIndex='5';
            document.getElementById('alumno').style.display = "none";
            document.getElementById('alumno').style.visibility = 'hidden';
            window.location.hash = '#filaEd'+inscripcionEditada.id; 
        }

        //se pone en mayusculas el contenido
        const seActualiza = (campo) => {
            campo.value = campo.value.toUpperCase();
        };

        const LanzaLaActualizacion = async () => {
            if (validaCampos()) {
                alert('validados');
                //lee(); valida campo y los lee()
                let cambiada = false;
                for (i in datosLeidos) {
                    if (datosLeidos[i] !== inscripcionEditada[i]) {
                        cambiada = true;
                        inscripcionEditada[i] = datosLeidos[i];
                    }
                }

                //alert(cambiada+'\n'+JSON.stringify(datosLeidos));
                //alert(cambiada + '\n' + JSON.stringify(inscripcionEditada));
                if (cambiada) {
                    document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
                    let conCambios = { id: inscripcionEditada.id, valor: Aes.Ctr.encryptFijo(JSON.stringify(datosLeidos), inscripcionEditada.claveAES, 256) };
                    alert(JSON.stringify(conCambios));
                    const miFetch = await fetch(getAbsolutePath() + '/modifica', {
                        headers: {
                            'Content-type': 'application/json'
                        },
                        method: 'POST',
                        //body: JSON.stringify({ id: 11, name: 'Rodrigo Díaz de Vivar', username: 'El Cid' })
                        body: JSON.stringify(conCambios)
                    });
                    // Transforma la respuesta. En este caso lo convierte a JSON
                    const json = await miFetch.json();
                    if (json.autorizado) {
                        inscripcionEditada.valor = json.inscripcion.valor;//una vez grabado lo pasamos al del local storage
                        localStorage.setItem('inscripciones', Aes.Ctr.encrypt(JSON.stringify(inscripciones), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256));
                        document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
                        alert('cambios realizados');
                    } else alert('no se han hecho cambios');
                }
            }
        }

        const CreaCopiaSol = () => {
            let aux = getAbsolutePath().split('admin');
            let urlComprobar = aux[0] + inscripcionEditada.yincanaId + `/comprueba?contador=${NUM_SOL}&clave=${CLAVE}`;
            alert(urlComprobar);
            //ponQR(urlComprobar);/*resultadoBD*/DatosSolicitud = tomaQR(urlComprobar, NUM_SOL, CLAVE);//NUM_SOL=DatosSolicitud[2];/*window.top.window.A(resultadoBD)*/;
            DatosSolicitud = generaQR(urlComprobar, NUM_SOL, CLAVE);
            alert('entramos: ' + '../' + inscripcionEditada.yincanaId + '/LogoGymk18.jpg');
            if (!datosLeidos.tipo) lee();
            /*let inscripcioon=inscripciones.find(ins => ins.id === element.id)()
            NUM_SOL=datosLeidos.nsolF*/
            getImageFromUrl('../' + inscripcionEditada.yincanaId + '/LogoGymk18.jpg', generaPDF);
            //generaPDF('../'+inscripcionEditada.yincanaId+'/LogoGymk18.jpg');
        }

        const mueveEquipo = async () => {
            if (document.getElementById('yincanaC').value === '#') {
                alert('Se debe selecciona una localidad')
            } else if (+document.getElementById('yincanaC').value === +inscripcionEditada.yincanaId) {
                alert('Se debe selecciona una localidad diferente de la de partida')
            } else {
                //alert(document.getElementById('yincanaC').value);
                if (validaCampos()) {
                    alert('validados');
                    //lee(); valida campo y los lee()
                    let cambiada = false;
                    for (i in datosLeidos) {
                        if (datosLeidos[i] !== inscripcionEditada[i]) {
                            cambiada = true;
                            inscripcionEditada[i] = datosLeidos[i];
                        }
                    }

                    //alert(cambiada+'\n'+JSON.stringify(datosLeidos));
                    //alert(cambiada + '\n' + JSON.stringify(inscripcionEditada));
                    let conCambios = { id: inscripcionEditada.id, nequipo: +document.getElementById('NEQUIPOED').value || null, encr: encriptakk(inscripcionEditada.claveAES, clavesPublicas[+document.getElementById('yincanaC').value - 1]), yincanaId: +document.getElementById('yincanaC').value };
                    if (cambiada) {
                        document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
                        conCambios.valor = Aes.Ctr.encryptFijo(JSON.stringify(datosLeidos), inscripcionEditada.claveAES, 256);
                    } else alert('no se han hecho cambios');//alert(JSON.stringify(conCambios));
                    const miFetch = await fetch(getAbsolutePath() + '/desplaza', {
                        headers: {
                            'Content-type': 'application/json'
                        },
                        method: 'POST',
                        //body: JSON.stringify({ id: 11, name: 'Rodrigo Díaz de Vivar', username: 'El Cid' })
                        body: JSON.stringify(conCambios)
                    });
                    // Transforma la respuesta. En este caso lo convierte a JSON
                    const json = await miFetch.json();
                    if (json.autorizado) {
                        if (cambiada) inscripcionEditada.valor = json.inscripcion.valor;//una vez grabado lo pasamos al del local storage
                        //actualizamos el localStorage
                        localStorage.setItem('inscripciones', Aes.Ctr.encrypt(JSON.stringify(inscripciones), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256));
                        let ii = aPresentar.findIndex((element) => element.id === inscripcionEditada.id)
                        let InsMov=aPresentar.splice(ii, 1);//quitamos la editada que ya no es de esta yincana
                        document.getElementById('EstadE'+inscripcionEditada.id).className = "DESPLAZADA";
                        let elemento2=document.getElementById('EstadM'+inscripcionEditada.id);
                        elemento2.className = "DESPLAZADA";
                        elemento2.innerHTML = 'DESPLAZADA<br>(<b>6</b>)';
                        //document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
                        alert('Inscripcion movida');
                        window.location.hash = '#filaEd'+inscripcionEditada.id; 
                    }
                }
            }
        }

        /////////para generar el CSV
        function arrayObjToCsv(ar, camp) {
            let campos = [];
            //si no se pasan los nombres de las filas a descargar se toman todas las del array.
            if (camp) campos = camp;
            else {
                for (i in ar[0]) campos.push(i);
            }
            //comprobamos compatibilidad
            if (window.Blob && (window.URL || window.webkitURL)) {
                var contenido = "",
                    d = new Date(),
                    blob,
                    reader,
                    save,
                    clicEvent;
                //creamos contenido del archivo
                //['id','nequipo','nsol',	'clave','tipo', 'tipoC', 'nombre_centro', 'loc_centro', 'cod_centro', 'Ap11', 'Ap12', 'Nombre1', 'Edad1', 'Ap21', 'Ap22', 'Nombre2', 'Edad2', 'Ap31', 'Ap32', 'Nombre3', 'Edad3', 'Ap41', 'Ap42', 'Nombre4', 'Edad4', 'ApP1', 'ApP2', 'NomP', 'TelP1', 'TelP2', 'EmailP','solicitada', 'recibida']
                contenido = campos.join(';') + '\n';
                ar.forEach(fila => {
                    campos.forEach(campo => {
                        contenido += fila[campo];
                        if (campo !== 'recibida') contenido += ';';
                    });
                    contenido += '\n';
                });
                //alert(contenido);
                //alert(JSON.stringify(yincanas));
                //alert(+document.getElementById('localidad').value)
                //creamos el blob
                blob = new Blob(["\ufeff", contenido], { type: 'text/csv' });
                //creamos el reader
                var reader = new FileReader();
                reader.onload = function (event) {
                    //escuchamos su evento load y creamos un enlace en dom
                    save = document.createElement('a');
                    save.href = event.target.result;
                    save.target = '_blank';
                    //aquí le damos nombre al archivo
                    //save.download = "log_"+ d.getDate() + "_" + (d.getMonth()+1) + "_" + d.getFullYear() +".csv";
                    //document.getElementById('BDATOS').value
                    //alert(yincanas[+document.getElementById('localidad').value].utilidad + '-' + d.getDate() + "_" + (d.getMonth() + 1) + "_" + d.getFullYear() + ".csv");
                    save.download = yincanas[+document.getElementById('localidad').value-1].utilidad + '-' + d.getDate() + "_" + (d.getMonth() + 1) + "_" + d.getFullYear() + ".csv";
                    //alert('se pasa');
                    try {
                        //creamos un evento click
                        clicEvent = new MouseEvent('click', {
                            'view': window,
                            'bubbles': true,
                            'cancelable': true
                        });
                    } catch (e) {
                        //si llega aquí es que probablemente implemente la forma antigua de crear un enlace
                        clicEvent = document.createEvent("MouseEvent");
                        clicEvent.initEvent('click', true, true);
                    }
                    //disparamos el evento
                    save.dispatchEvent(clicEvent);
                    //liberamos el objeto window.URL
                    (window.URL || window.webkitURL).revokeObjectURL(save.href);
                }
                //leemos como url
                reader.readAsDataURL(blob);
            } else {
                //el navegador no admite esta opción
                alert("Su navegador no permite esta acción");
            }
        };


        const BuscaDuplicados = () => {
            let Duplicados = []
            let ListaParticipantes = [];
            aPresentar.forEach((inscripcion, i) => {//hacemos una lista de nombres ids y posiciones
                let lista = { pos: i, id: inscripcion.id, participantes: [] };
                lista.participantes.push(`${inscripcion.Ap11} ${inscripcion.Ap12}, ${inscripcion.Nombre1}`);
                lista.participantes.push(`${inscripcion.Ap21} ${inscripcion.Ap22}, ${inscripcion.Nombre2}`);
                lista.participantes.push(`${inscripcion.Ap31} ${inscripcion.Ap32}, ${inscripcion.Nombre3}`);
                lista.participantes.push(`${inscripcion.Ap41} ${inscripcion.Ap42}, ${inscripcion.Nombre4}`);
                ListaParticipantes.push(lista);
            });
            ListaParticipantes.forEach((fila, i) => {
                ListaParticipantes.forEach((col, j) => {
                    if (j < i) {
                        //no hacemos nada
                    } else if (i === j) {//comparamos los de cada inscripcion
                        for (let k = 0; k < fila.participantes.length; k++) {
                            for (let kk = k + 1; kk < fila.participantes.length; kk++) {
                                if (fila.participantes[k] === col.participantes[kk]) Duplicados.push({ pos1: i + 1, id1: fila.id, alumno1: 'ALUMNO' + (k + 1), pos2: j + 1, id2: col.id, alumno2: 'ALUMNO' + (kk + 1), nombre: fila.participantes[k] })
                            }
                        }
                    } else {//comparamos los de una inscrcion con otras inscripciones
                        for (let k = 0; k < fila.participantes.length; k++) {
                            for (let kk = 0; kk < fila.participantes.length; kk++) {
                                if (fila.participantes[k] === col.participantes[kk]) Duplicados.push({ pos1: i + 1, id1: fila.id, alumno1: 'ALUMNO' + (k + 1), pos2: j + 1, id2: col.id, alumno2: 'ALUMNO' + (kk + 1), nombre: fila.participantes[k] })
                            }
                        }
                    }
                });
            });

            //alert(MuestraDuplicados());
            if (Duplicados.length == 0) {
                alert('No hay duplicados en la lista actual.');
            } else {
                let listar = confirm(MuestraDuplicados(Duplicados) + '\n¿Los quieres en un archivo CSV?');
                if (listar) {
                    arrayObjToCsv(Duplicados);
                }
            }
        }
        const MuestraDuplicados = (Duplicados) => {
            var aux = '';
            for (var i = 0; i < Duplicados.length; i++) {
                for (j in Duplicados[i]) {
                    aux += j + ': ' + Duplicados[i][j] + '; ';
                }
                aux += '\r\n';
            }
            return aux;
        }

        /// realiza la carga de inscripciones de una yincana de 2 en dos hasta
        //  completar el proceso, los parámetros se pasan en un objeto global,
        //  ya que se lanza (y autolanza) con un setTimeOut.
        const veCargando = (/*tanda,partida,cuantas,seModificaIns,nfilas*/) => {//alert('entramos'+tanda.length);
            let { tanda, partida, cuantas, seModificaIns, nfilas } = DatosProgreso;
            if (partida === 0) document.getElementById('decrip').innerHTML = '';
            //tanda.forEach((element, avanceI) => {//alert('sii');
            let final = partida + cuantas;
            if (DatosProgreso.nfilas < final) final = DatosProgreso.nfilas;
            //alert(final+'-----'+DatosProgreso.nfilas)
            for (let avanceI = partida; avanceI < final; avanceI++) {
                element = tanda[avanceI];
                //aPresentar.push(element.id);
                ////para barra de progreso                    
                widthPbar = Math.floor(avanceI / nfilas * 100);
                document.getElementById('miBarra').value = widthPbar;
                document.getElementById('miAvance').innerHTML = widthPbar + '%';

                let inscripcion = inscripciones.find(ins => ins.id === element.id);
                //alert('llll: '+JSON.stringify( inscripcion));
                let claveAES;
                let resultado;
                let seAnnade = false;
                let nuevoElemento = {};//alert(inscripcion)
                //alert('vamos por'+widthPbar)
                if (!inscripcion) {//alert('hhhh');
                    seModificaIns = true;
                    claveAES = desencriptakk(element.encr, clavesPrivadas[+element.yincanaId - 1]);
                    resultado = JSON.parse(Aes.Ctr.decrypt(element.valor, claveAES, 256));
                    ['id', 'nequipo', 'nsol', 'clave', 'valor', 'solicitada', 'recibida', 'estado', 'yincanaId', 'updatedAt'].forEach(item => {
                        nuevoElemento[item] = element[item];
                    });
                    nuevoElemento['claveAES'] = claveAES;
                    ['tipo', 'tipoC', 'nombre_centro', 'loc_centro', 'cod_centro',
                        'Ap11', 'Ap12', 'Nombre1', 'Edad1',
                        'Ap21', 'Ap22', 'Nombre2', 'Edad2',
                        'Ap31', 'Ap32', 'Nombre3', 'Edad3',
                        'Ap41', 'Ap42', 'Nombre4', 'Edad4',
                        'ApP1', 'ApP2', 'NomP', 'TelP1', 'TelP2', 'EmailP'].forEach(item => {
                            nuevoElemento[item] = resultado[item];
                        })
                    seAnnade = true;//se ha creado uno nuevo.
                } else if (inscripcion.updatedAt < element.updatedAt) {
                    seModificaIns = true;
                    nuevoElemento = inscripcion;
                    ['id', 'nequipo', 'nsol', 'clave', 'valor', 'solicitada', 'recibida', 'estado', 'yincanaId', 'updatedAt'].forEach(item => {
                        nuevoElemento[item] = element[item];
                    });
                    //alert('se modifica el valor antiguo');
                    if (inscripcion.valor !== element.valor) {
                        resultado = JSON.parse(Aes.Ctr.decrypt(element.valor, inscripcion.claveAES, 256));
                        [, 'tipo', 'tipoC', 'nombre_centro', 'loc_centro', 'cod_centro',
                            'Ap11', 'Ap12', 'Nombre1', 'Edad1',
                            'Ap21', 'Ap22', 'Nombre2', 'Edad2',
                            'Ap31', 'Ap32', 'Nombre3', 'Edad3',
                            'Ap41', 'Ap42', 'Nombre4', 'Edad4',
                            'ApP1', 'ApP2', 'NomP', 'TelP1', 'TelP2', 'EmailP'].forEach(item => {
                                nuevoElemento[item] = resultado[item];
                            });
                    }


                }
                //claveAES=desencriptakk(element.encr, clavesPrivadas[+element.yincanaId-1]);
                //resultado=JSON.parse(Aes.Ctr.decrypt(element.valor,claveAES,256));

                //alert(JSON.stringify(resultado));
                if (seAnnade) {
                    inscripciones.push(nuevoElemento);
                    aPresentar.push(nuevoElemento);
                } else aPresentar.push(inscripcion);
            }
            // });
            if (seModificaIns) {
                //localStorage.setItem('inscripciones', JSON.stringify(inscripciones));
                localStorage.setItem('inscripciones', Aes.Ctr.encrypt(JSON.stringify(inscripciones), 'MIIJKAIBAAKCAgEAu5AeYQ8ZtSQI8585cCQS0Hh0WO6+Tj7lMcXqMsbegxOpd0Vo', 256));
            }
            //alert(JSON.stringify(inscripciones))
            //alert(JSON.stringify(json));
            //alert(aPresentar);
            /*DatosProgreso={
tanda:'',partida:0,cuantas:2,seModificaIns:false,nfilas:0
}*/
            DatosProgreso.partida += DatosProgreso.cuantas;
            DatosProgreso.seModificaIns = seModificaIns;
            //DatosProgreso.nfilas
            //alert(DatosProgreso.partida+'; '+nfilas);
            if (DatosProgreso.partida >= nfilas) {
                document.getElementById('miBarra').value = 100;
                document.getElementById('miAvance').innerHTML = '100%';
                document.getElementById('decrip').innerHTML = CreaTablaInscripciones(aPresentar);
            } else setTimeout(veCargando, 1);
        }
        
        const LanzaCambioLocalidad=(yincanaId)=>{
            let opcion=confirm(`¿Seguro que quieres cambiar de yincana (${yincanaId})?`);
            if (opcion) LanzaCargaCambioEstado();
        }

    </script>
</head>

<body>
    <div style="display: inline;"><textarea id="cPrivada" name="input" type="text" rows=4
            cols=70>Aquí se pone la clave privada</textarea>
        <input type="file" id="file-input" /> ++CLAVE ADMINISTRADOR: <input type="password" id="CAdmin">
        <!--<h3>Contenido del archivo:</h3>
<pre id="contenido-archivo"></pre>-->

    </div>
    <div>
        <a name="posicionEdicion">LOCALIDAD:</a>
        <select id="localidad" onchange="LanzaCambioLocalidad(this.value);">
            <% for (let i=0;i<yincanas.length;i++){ %>
                <option id="<%= yincanas[i].utilidad %>" value="<%= yincanas[i].id %>" %>
                    <% if (i===0) { %>
                        <%= 'selected' %>
                            <% } %>><%= yincanas[i].utilidad %>
                </option>
                <% } %>

        </select>
        ESTADO DE SOLICITUD:<select id="estado" onchange="document.getElementById('ESTADO').value=this.value;">
            <option value=""></option>
            <option value="100" selected>Sin ANULADAs</option>
            <option value="0">GENERADA</option>
            <option value="1">RECIBIDA</option>
            <option value="2">ADMITIDA</option>
            <option value="3">L. ESPERA</option>
            <option value="4">ANULADA</option>
            <option value="5">DESPLAZADA</option>
            <option value="12">REC., ADMITIDA y L.ESP.</option>
        </select>
        FECHA ENTRE <input id="diaIn" type="text" maxlength="2" size="2"
            onchange="document.getElementById('FECHAINI').value=Atimestamp(this.value,document.getElementById('mesIn').value)">
        /
        <select id="mesIn"
            onchange="document.getElementById('FECHAINI').value=Atimestamp(document.getElementById('diaIn').value, this.value)">
            <option value=""></option>
            <option value="1">FEBRERO</option>
            <option value="2">MARZO</option>
            <option value="3">ABRIL</option>
        </select>
        Y <input id="diaFin" type="text" maxlength="2" size="2"
            onchange="document.getElementById('FECHAFIN').value=Atimestamp(this.value,document.getElementById('mesFin').value)">
        /
        <select id="mesFin"
            onchange="document.getElementById('FECHAFIN').value=Atimestamp(document.getElementById('diaFin').value, this.value)">
            <option value=""></option>
            <option value="1">FEBRERO</option>
            <option value="2">MARZO</option>
            <option value="3">ABRIL</option>
        </select>

        BORRA LO GUARDADO: <input type="button" value="borra"
            onclick="localStorage.removeItem('inscripciones');alert(localStorage.getItem('inscripciones'))">
        <br>
        QUITA LA SESION: <input type="button" value="borra la sesion" onclick="quitaSesionAdmin()">
    </div>
    <div align="center"><progress id="miBarra" max="100" value="0"></progress><span id="miAvance">0%</span></div>
    <br />
    <!--<input id="acceder" type="button" value="acceder" onclick="haHabidoEdicion=false;ocultaEditor();document.getElementById('reiframe').style.visibility='visible';document.getElementById('decrip').innerHTML='';iniciaBarra();/*cucu=setInterval(gestBarra, 1000);*/LanzaConexion();cargaOperaciones();document.getElementById('genk').submit();" />-->
    <input id="acceder" type="button" value="acceder" onclick="LanzaCargaCambioEstado();" />
    <input id="aCSV" type="button" value="aCSV"
        onclick="/*AjustaSalida();*/arrayObjToCsv(aPresentar,['id','nequipo','nsol', 'clave','tipo', 'tipoC', 'nombre_centro', 'loc_centro', 'cod_centro', 'Ap11', 'Ap12', 'Nombre1', 'Edad1', 'Ap21', 'Ap22', 'Nombre2', 'Edad2', 'Ap31', 'Ap32', 'Nombre3', 'Edad3', 'Ap41', 'Ap42', 'Nombre4', 'Edad4', 'ApP1', 'ApP2', 'NomP', 'TelP1', 'TelP2', 'EmailP','solicitada', 'recibida']);" />
    <input id="CambiaEstadosSinRecargar" type="button" value="CambiaEstadosSinRecargar"
        onclick="cargaOperaciones();" />
    <input id="BuscaDuplicados" type="button" value="BuscaDuplicados" onclick="BuscaDuplicados();" />
    <input type="button" value="stringify Privkeys" onclick="alert(JSON.stringify(clavesPrivadas))" />

    <iframe name="frameditar" id="frameditar" src="./edAlumnos.php" width="100%" height="0px"
        style="visibility: hidden;"></iframe>
    <div id="decrip" style="visibility: visible; z-index: 4"></div>
    <div id="alumno" style="visibility: visible; z-index: 4"></div>
    <span id="qr"></span>




    <div id="reiframe" style="visibility: visible;">
        <iframe name="resk" id="resk" src="./info.html" width="100%" height="500px"></iframe>
    </div>


    <script languaje="javascript">
        ///para leer la clava de archivos del equipo
        function ponEvento() {
            document.getElementById('file-input')
                .addEventListener('change', leerArchivo, false);
        }
        function leerArchivo(e) {
            var archivo = e.target.files[0];
            if (!archivo) {
                return;
            }
            var lector = new FileReader();
            lector.onload = function (e) {
                var contenido = e.target.result;
                mostrarContenido(contenido);
            };
            lector.readAsText(archivo);
        }

        function mostrarContenido(contenido) {
            //var elemento = document.getElementById('contenido-archivo');
            var elemento = document.getElementById('cPrivada');
            var n = contenido.length - 1;
            elemento.innerHTML = contenido.substring(0, n);
            //lo pasamos a las claves privadas, sustituiría el de desencriptakk
            clavesPrivadas = JSON.parse(contenido.substring(0, n))
        }
        ponEvento();
    </script>

</body>

</html>